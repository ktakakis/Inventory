@model IEnumerable<netcore.Models.Invent.MoneyTransferOrder>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminlteNetcoreIndex.cshtml";
    ViewData["EntityIcon"] = "fa fa-exchange";
    ViewData["ListTitle"] = "Λίστα Εντολών Μεταφοράς Χρημάτων";
    ViewData["IndexInfo"] = "Η Εντολή Μεταφοράς Χρημάτων (ΕΜΧ) είναι μια διαδικασία μεταφοράς χρημάτων από ΄ένα ταμείο σε ένα άλλο ταμείο.";
}

<table class="table">
    <thead>
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.MoneyTransferOrderNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MoneyTransferOrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CashRepositoryFrom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CashRepositoryTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MoneyTransferOrderStatus)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="tools">
                        <a asp-action="Edit" asp-route-id="@item.MoneyTransferOrderId" class="btn btn-primary btn-xs"><i class="fa fa-pencil"></i></a>
                        <a asp-action="Details" asp-route-id="@item.MoneyTransferOrderId" class="btn btn-primary btn-xs"><i class="fa fa-list"></i></a>
                        <a asp-action="Delete" asp-route-id="@item.MoneyTransferOrderId" class="btn btn-danger btn-xs"><i class="fa fa-trash"></i></a>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MoneyTransferOrderNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MoneyTransferOrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CashRepositoryFrom.CashRepositoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CashRepositoryTo.CashRepositoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentAmount)
                </td>
                <td>
                    @if (item.MoneyTransferOrderStatus == netcore.Models.Invent.MoneyTransferOrderStatus.Completed)
                    {
                        <span class="label label-success">
                            @Html.DisplayFor(modelItem => item.MoneyTransferOrderStatus)
                        </span>
                    }
                    @if (item.MoneyTransferOrderStatus == netcore.Models.Invent.MoneyTransferOrderStatus.Open)
                    {
                        <span class="label label-primary">
                            @Html.DisplayFor(modelItem => item.MoneyTransferOrderStatus)
                        </span>
                    }
                    @if (item.MoneyTransferOrderStatus == netcore.Models.Invent.MoneyTransferOrderStatus.Draft)
                    {
                        <span class="label label-warning">
                            @Html.DisplayFor(modelItem => item.MoneyTransferOrderStatus)
                        </span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
